{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/Loading.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","alert","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","item","images","downsized_medium","id","title","GifGridItem","className","src","alt","Loading","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAsCeA,EAnCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAErB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,mCACE,uBAAMC,SAdW,SAACC,GACpBA,EAAEC,iBAEEJ,GAIJF,GAAc,SAAAO,GAAU,OAAML,GAAN,mBAAqBK,OAC7CJ,EAAc,KAJZK,MAAM,uCAUN,UACE,uBACEC,KAAK,OACLC,YAAY,sBACZC,MAAOT,EACPU,SAAU,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,UAExC,kD,+BC5BGG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAUH,GAF3C,+DAGEI,MAAMF,GAHR,cAGfG,EAHe,gBAIAA,EAASC,OAJT,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAS,IAAD,EAC5B,MAAO,CACLR,IAAG,UAAEQ,EAAKC,cAAP,aAAE,EAAaC,iBAAiBV,IACnCW,GAAIH,EAAKG,GACTC,MAAOJ,EAAKI,UAVK,kBAadN,GAbc,4CAAH,sDCaLO,EAXK,SAAC,GAAkB,IAAjBD,EAAgB,EAAhBA,MAAOZ,EAAS,EAATA,IAC3B,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKJ,IACpB,qBAAKE,UAAU,YAAf,SACE,4BAAIF,UCGGK,EARC,WACd,OACE,qBAAKH,UAAU,UAAf,SACE,sBAAKA,UAAU,WAAf,UAA0B,wBAAW,wBAAW,wBAAW,8BCclDI,EAfQ,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAExB,ECH0B,SAACA,GAE3B,MAA0Bd,mBAAS,CAACqB,KAAM,GAAIc,SAAS,IAAvD,mBAAOC,EAAP,KAAcC,EAAd,KAYE,OAVFC,qBAAU,WACRzB,EAAQC,GACLyB,MAAK,SAAAd,GAEFY,EAAS,CAAChB,KAAMI,EAAQU,SAAS,SAIpC,CAACrB,IAEGsB,EDXsBI,CAAa1B,GAAhCW,EAAZ,EAAOJ,KAAac,EAApB,EAAoBA,QAEpB,OACE,qCACE,6BAAKrB,IACJqB,GAAW,cAAC,EAAD,IACZ,qBAAKL,UAAU,QAAf,SACGL,EAAOF,KAAI,SAAAkB,GAAK,OAAI,cAAC,EAAD,eAAgCA,GAAdA,EAAMd,aEYtCe,EArBM,WAEnB,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAOM,EAAP,KAAmBP,EAAnB,KAEA,OACE,qCACA,sBAAK+B,UAAU,SAAf,UACE,8CACA,cAAC,EAAD,CAAa/B,cAAeA,OAE5B,uBAEA,6BACGO,EAAWiB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCb5C6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e6c21745.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({ setCategories }) => {\n\n  const [inputValue, setInputValue] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    \n    if(!inputValue) {\n      alert('Debe ingresar un valor para buscar')\n      return\n    }\n    setCategories(categories => [ inputValue, ...categories])\n    setInputValue('')\n    \n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          placeholder=\"Buscar categoria...\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)} \n          />\n          <button>Buscar</button>\n      </form>\n    </>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const getGifs = async (category) => {\n    \n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=j99rgo0dUh8COkuOD3HLkXIhDrkuGzdg`\n  const response = await fetch(url)\n  const {data} = await response.json()\n\n  const gifs = data.map(item => {\n    return {\n      url: item.images?.downsized_medium.url,\n      id: item.id,\n      title: item.title\n    }\n  })\n  return gifs\n}","import React from 'react'\n\nconst GifGridItem = ({title, url}) => {\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <img src={url} alt={title} />\n      <div className='card-text'>\n        <p>{title}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default GifGridItem\n","\n\nconst Loading = () => {\n  return (\n    <div className=\"loading\">\n      <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n\nexport default Loading\n","import { useFetchGifs } from \"../hooks/useFetchGifs\"\nimport GifGridItem from \"./GifGridItem\"\nimport Loading from \"./Loading\"\n\nexport const GifGrid = ({ category }) => {\n\n  const {data:images, loading} = useFetchGifs(category)\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading && <Loading />}\n      <div className=\"cards\">\n        {images.map(image => <GifGridItem key={image.id} {...image} />)}\n      </div>\n    </>\n  )\n}\n\nexport default GifGrid","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = (category) => {\n\n  const [state, setState] = useState({data: [], loading: true})\n\n  useEffect(() => {\n    getGifs(category)\n      .then(images => {\n\n          setState({data: images, loading: false})\n\n        \n      })\n    }, [category])\n  \n    return state\n}","import { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['Coding'])\n\n  return (\n    <>\n    <div className='header'> \n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n    </div>\n      <hr />\n\n      <ol>\n        {categories.map(category => (\n          <GifGrid category={category} key={category} />\n        ))}\n      </ol>\n    </>\n  )\n}\n\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}